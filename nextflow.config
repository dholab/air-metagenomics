params {
	
	// WORKFLOW PARAMETERS TO REVIEW AT EACH RUN
	// ----------------------------------------

    // Location of samplesheet specifying the file label for raw demultiplexed 
    // FASTQs and a sample ID to assign to each file
    samplesheet = "$projectDir/resources/samplesheet.csv"

    // whether the sequence reads are from an Illumina, PacBio, or Oxford Nanopore instrument
    illumina = false
    pacbio = false
    ont = true

    // Virus reference sequence FASTA
    virus_ref = "$projectDir/resources/ncbi_human_virus_refseq_20221011.masked.fasta"
	
	// Where to place results
	results = "$launchDir/results"

    // Adapter trimming settings
    adapter_seq = "TTTTTTTTTTAATGTACTTCGTTCAGTTACGTATTGCT"

	// Whether to run in "low disk mode". If this is set to true, large or intermediate files will be
	// symlinked into the results directory rather than being copied. If this workflow is being run on
	// an HPC cluster or other well-resourced compute infrastructure, we recommend leaving this as false.
	low_disk_mode = false

	// Read batch size. This defines the number of sequences to be batched when the workflow multithreads
	// a biopython operation, such as when it converts FASTQs to FASTAs.
	seq_batch_size = 5000
	
	
	// WORKFLOW PARAMETERS THAT SHOULD NOT BE CHANGED
	// ----------------------------------------

	// resources/assets folder
	resources = "$projectDir/resources"

	// FASTA or FASTQ file of human and "kit-ome" contaminant reads (Required for each run)
	// NOTE: This will be replaced with an automated download in the future so that you don't
	// need to download and organize this tarball yourself.
	contaminants_tar = "$projectDir/resources/contam_ref.tar.gz"
	
	// Find number of cpus
	max_local_cpus = Runtime.getRuntime().availableProcessors() - 1
	
	// Find the date
	date = new java.util.Date().format('yyyyMMdd')
	
}


// WHETHER TO GENERATE A REPORT OF RUN STATISTICS
report {
    enabled = true
    file    = "${params.results}/report.html"
}


// WHETHER TO GENERATE A VISUALIZATION OF THE WORKFLOW
dag {
	enabled = false
	overwrite = true
	file = 'workflow-visualization.png'
}


// WHETHER TO REMOVE TEMPORARY FILES AFTER A SUCCESSFUL RUN
cleanup = false


// PROFILE OPTIONS
profiles {
	
	standard {
		
		docker.enabled = true
		singularity.enabled = false
		conda.enabled = false
		
		process.container = "nrminor/air-sample-seqs:v1.7"
		
	}
	
	docker {
		
		docker.enabled = true
		singularity.enabled = false
		conda.enabled = false
		
		process.container = "nrminor/air-sample-seqs:v1.7"
		
	}
	
	singularity {
		
		singularity.enabled = true
		docker.enabled = false
		conda.enabled = false
		
		process.container = "nrminor/air-sample-seqs:v1.7"
		
	}

	hpc_cluster {

		docker.enabled = false
		singularity.enabled = true
		conda.enabled = false

		executor {

			name = 'local'
			cpus = 32
			memory = 64.GB

		}
		
		process.container = "nrminor/air-sample-seqs:v1.7"
	
	}
	
}


// MANIFEST
manifest {
	homePage = 'https://github.com/dholab/pathogen-agnostic-sequence-analysis'
	mainScript = 'main.nf'
	defaultBranch = 'main'
	description = 'NextFlow pipeline for quality controlling and aligning air cartridge sequence reads to a variety of possible pathogens'
	author = 'Nicholas R. Minor, Mitchell D. Ramuta'
}